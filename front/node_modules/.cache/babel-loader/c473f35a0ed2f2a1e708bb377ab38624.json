{"ast":null,"code":"// import { scrollTo } from '@/utils/scroll-to'\nexport default {\n  name: 'HistoryPagination',\n  props: {\n    total: {\n      required: true,\n      type: Number\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    limit: {\n      type: Number,\n      default: 10\n    },\n    pageSizes: {\n      type: Array,\n\n      default() {\n        return [10, 20, 30, 50];\n      }\n\n    },\n    layout: {\n      type: String,\n      default: 'total, sizes, prev, pager, next, jumper'\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true\n    },\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    algin: {\n      type: String,\n      default: () => 'center'\n    }\n  },\n  computed: {\n    currentPage: {\n      get() {\n        return this.page;\n      },\n\n      set(val) {\n        this.$emit('update:page', val);\n      }\n\n    },\n    pageSize: {\n      get() {\n        return this.limit;\n      },\n\n      set(val) {\n        this.$emit('update:limit', val);\n      }\n\n    }\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit('pagination', {\n        page: this.currentPage,\n        limit: val\n      });\n\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    },\n\n    handleCurrentChange(val) {\n      this.$emit('pagination', {\n        page: val,\n        limit: this.pageSize\n      });\n\n      if (this.autoScroll) {\n        scrollTo(0, 800);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkBA;AAEA;EACAA,yBADA;EAEAC;IACAC;MACAC,cADA;MAEAC;IAFA,CADA;IAKAC;MACAD,YADA;MAEAE;IAFA,CALA;IASAC;MACAH,YADA;MAEAE;IAFA,CATA;IAaAE;MACAJ,WADA;;MAEAE;QACA;MACA;;IAJA,CAbA;IAmBAG;MACAL,YADA;MAEAE;IAFA,CAnBA;IAuBAI;MACAN,aADA;MAEAE;IAFA,CAvBA;IA2BAK;MACAP,aADA;MAEAE;IAFA,CA3BA;IA+BAM;MACAR,aADA;MAEAE;IAFA,CA/BA;IAmCAO;MACAT,YADA;MAEAE;IAFA;EAnCA,CAFA;EA0CAQ;IACAC;MACAC;QACA;MACA,CAHA;;MAIAC;QACA;MACA;;IANA,CADA;IASAC;MACAF;QACA;MACA,CAHA;;MAIAC;QACA;MACA;;IANA;EATA,CA1CA;EA4DAE;IACAC;MACA;QAAAf;QAAAE;MAAA;;MACA;QACAc;MACA;IACA,CANA;;IAOAC;MACA;QAAAjB;QAAAE;MAAA;;MACA;QACAc;MACA;IACA;;EAZA;AA5DA","names":["name","props","total","required","type","page","default","limit","pageSizes","layout","background","autoScroll","hidden","algin","computed","currentPage","get","set","pageSize","methods","handleSizeChange","scrollTo","handleCurrentChange"],"sourceRoot":"src/components/history","sources":["HistoryPagination.vue"],"sourcesContent":["<template>\n  <div :class=\"{ hidden: hidden }\" class=\"pagination-container\">\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page.sync=\"currentPage\"\n      :style=\"{'text-align':algin}\"\n      :background=\"background\"\n      :page-sizes=\"pageSizes\"\n      :page-size.sync=\"pageSize\"\n      :layout=\"layout\"\n      :total=\"total\"\n      v-bind=\"$attrs\"\n    />\n  </div>\n</template>\n\n<script>\n// import { scrollTo } from '@/utils/scroll-to'\n\nexport default {\n  name: 'HistoryPagination',\n  props: {\n    total: {\n      required: true,\n      type: Number,\n    },\n    page: {\n      type: Number,\n      default: 1,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    pageSizes: {\n      type: Array,\n      default() {\n        return [10, 20, 30, 50]\n      },\n    },\n    layout: {\n      type: String,\n      default: 'total, sizes, prev, pager, next, jumper',\n    },\n    background: {\n      type: Boolean,\n      default: true,\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true,\n    },\n    hidden: {\n      type: Boolean,\n      default: false,\n    },\n    algin: {\n      type: String,\n      default: ()=>'center',\n    },\n  },\n  computed: {\n    currentPage: {\n      get() {\n        return this.page\n      },\n      set(val) {\n        this.$emit('update:page', val)\n      },\n    },\n    pageSize: {\n      get() {\n        return this.limit\n      },\n      set(val) {\n        this.$emit('update:limit', val)\n      },\n    },\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit('pagination', { page: this.currentPage, limit: val })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    },\n    handleCurrentChange(val) {\n      this.$emit('pagination', { page: val, limit: this.pageSize })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.pagination-container {\n  background: #fefeff;\n  width: 1300px;\n  margin: 0 auto;\n  border-radius: 0 0 5px 5px;\n}\n.pagination-container.hidden {\n  display: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}