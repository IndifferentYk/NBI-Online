{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: \"P_AccountPage\",\n\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.registerForm.checkPass !== '') {\n          this.$refs.registerForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      sliderType: \"mainContainer_switch_slider_left\",\n      validateCodeSending: false,\n      loginForm: {\n        account: \"\",\n        password: \"\"\n      },\n      loginFormRule: {\n        account: [{\n          required: true,\n          message: '请输入账户信息(邮箱地址)',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      registerForm: {\n        account: \"\",\n        password: \"\",\n        checkPass: \"\",\n        vCode: \"\"\n      },\n      registerFormRule: {\n        account: [{\n          required: true,\n          message: '请输入账户信息(邮箱地址)',\n          trigger: 'change'\n        }],\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    switchPage(w) {\n      if (w === 1) {\n        this.sliderType = \"mainContainer_switch_slider_left\";\n      } else if (w === 2) {\n        this.sliderType = \"mainContainer_switch_slider_right\";\n      }\n    },\n\n    getCookie(objname) {\n      //获取指定名称的cookie的值\n      const arrstr = document.cookie.split(\"; \");\n\n      for (var i = 0; i < arrstr.length; i++) {\n        var temp = arrstr[i].split(\"=\");\n        if (temp[0] === objname) return temp[1];\n      }\n\n      return null;\n    },\n\n    setCookie(name, value, hours, path) {\n      const expires = new Date();\n      expires.setTime(expires.getTime() + hours * 3600000);\n      path = path === \"\" ? \"\" : \";path=\" + path;\n\n      const _expires = typeof hours == \"string\" ? \"\" : \";expires=\" + expires.toUTCString();\n\n      document.cookie = name + \"=\" + value + _expires + path;\n    },\n\n    loginCheck() {\n      if (this.loginForm.account === \"\" || this.loginForm.password === \"\") {\n        this.$message({\n          showClose: true,\n          message: '请首先输入账号和密码',\n          type: 'error'\n        });\n        return;\n      }\n\n      this.$axios.post('/NBI/User/checkLogin/', {\n        \"uid\": this.loginForm.account,\n        \"pwd\": this.loginForm.password,\n        \"token\": this.getCookie(\"NBI_token\")\n      }).then(response => {\n        if (response.data === 1) {\n          this.$message({\n            showClose: true,\n            message: '该邮箱未注册！',\n            type: 'error'\n          });\n        } else if (response.data === 2) {\n          this.$message({\n            showClose: true,\n            message: '密码错误！',\n            type: 'error'\n          });\n        } else {\n          // 登录成功\n          this.setCookie(\"NBI_token\", response.data.token, 2, \"/NBI\");\n          this.setCookie(\"NBI_UID\", response.data.uid, 72, \"/NBI\");\n          this.$bus.$emit('changeStatus', {\n            status: true,\n            uname: response.data.uname\n          });\n\n          if (this.$refs.rememAC.checked) {\n            //记录pwd\n            this.setCookie(\"NBI_pwd\", this.loginForm.password, 72, \"/NBI\");\n          }\n\n          this.$message({\n            showClose: true,\n            message: '登录成功！页面将会自动跳转',\n            type: 'success'\n          });\n          setTimeout(() => {\n            this.$router.push({\n              path: \"/ImageProcess\"\n            });\n          }, 2000);\n        }\n      });\n    },\n\n    checkEmail(email) {\n      const myReg = /^[a-zA-Z0-9_-]+@([a-zA-Z0-9]+\\.)+(com|cn|net|org)$/;\n      return myReg.test(email);\n    },\n\n    registerCheck() {\n      if (this.registerForm.checkPass !== this.registerForm.password) {\n        this.$message({\n          showClose: true,\n          message: '两次密码输入不一致',\n          type: 'error'\n        });\n        return;\n      }\n\n      if (this.registerForm.account === null || this.registerForm.password === null) {\n        this.$message({\n          showClose: true,\n          message: '注册关键信息不能为空',\n          type: 'error'\n        });\n        return;\n      }\n\n      if (!this.checkEmail(this.registerForm.account)) {\n        this.$message({\n          showClose: true,\n          message: '请输入符合规范的电子邮箱',\n          type: 'error'\n        });\n        return;\n      }\n\n      this.$axios.post('/NBI/User/register/', {\n        \"email\": this.registerForm.account,\n        \"pw\": this.registerForm.password\n      }).then(response => {\n        if (response.data === 0) {\n          this.$message({\n            showClose: true,\n            message: '注册失败，该邮箱地址已被注册！',\n            type: 'error'\n          });\n          this.registerForm.account = \"\";\n          this.registerForm.password = \"\";\n        } else if (response.data === 1) {\n          this.$message({\n            showClose: true,\n            message: '注册成功！请登录。',\n            type: 'success'\n          });\n          setTimeout(() => {\n            this.switchPage(1);\n          }, 3000);\n        }\n      });\n    }\n\n  },\n\n  mounted() {\n    const pwd = this.getCookie(\"NBI_pwd\");\n\n    if (pwd != null) {\n      this.loginForm.password = pwd;\n      this.loginForm.account = this.getCookie(\"NBI_UID\");\n      this.$refs.rememAC.checked = true;\n    }\n\n    this.switchPage(this.$route.query.w);\n  }\n\n};","map":{"version":3,"mappings":";AAiEA;EACAA,qBADA;;EAEAC;IACA;MACA;QACAC;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CATA;;IAUA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAC,8CADA;MAEAC,0BAFA;MAGAC;QACAC,WADA;QAEAC;MAFA,CAHA;MAOAC;QACAF,UACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,CADA;MAJA,CAPA;MAeAC;QACAN,WADA;QAEAC,YAFA;QAGAM,aAHA;QAIAC;MAJA,CAfA;MAqBAC;QACAT,UACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAJ,WACA;UAAAE;UAAAO;UAAAL;QAAA,CADA,CAJA;QAOAE,YACA;UAAAJ;UAAAO;UAAAL;QAAA,CADA;MAPA;IArBA;EAiCA,CAvDA;;EAwDAM;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA,CARA;;IASAC;MAAA;MACA;;MACA;QACA;QACA;MACA;;MACA;IACA,CAhBA;;IAiBAC;MACA;MACAC;MACAC;;MACA;;MACAC;IACA,CAvBA;;IAwBAC;MACA;QACA;UACAC,eADA;UAEAf,qBAFA;UAGAgB;QAHA;QAKA;MACA;;MACA;QACA,6BADA;QAEA,8BAFA;QAGA;MAHA,GAIAC,IAJA,CAIAC;QACA;UACA;YACAH,eADA;YAEAf,kBAFA;YAGAgB;UAHA;QAKA,CANA,MAOA;UACA;YACAD,eADA;YAEAf,gBAFA;YAGAgB;UAHA;QAKA,CANA,MAOA;UACA;UACA;UACA;UACA;YAAAG;YAAAC;UAAA;;UACA;YACA;YACA;UACA;;UACA;YACAL,eADA;YAEAf,wBAFA;YAGAgB;UAHA;UAKAK;YACA;cAAAT;YAAA;UACA,CAFA,EAEA,IAFA;QAGA;MACA,CArCA;IAsCA,CAvEA;;IAwEAU;MACA;MACA;IACA,CA3EA;;IA4EAC;MACA;QACA;UACAR,eADA;UAEAf,oBAFA;UAGAgB;QAHA;QAKA;MACA;;MACA;QACA;UACAD,eADA;UAEAf,qBAFA;UAGAgB;QAHA;QAKA;MACA;;MACA;QACA;UACAD,eADA;UAEAf,uBAFA;UAGAgB;QAHA;QAKA;MACA;;MACA;QACA,kCADA;QAEA;MAFA,GAGAC,IAHA,CAGAC;QACA;UACA;YACAH,eADA;YAEAf,0BAFA;YAGAgB;UAHA;UAKA;UACA;QACA,CARA,MASA;UACA;YACAD,eADA;YAEAf,oBAFA;YAGAgB;UAHA;UAKAK;YACA;UACA,CAFA,EAEA,IAFA;QAGA;MACA,CAvBA;IAwBA;;EA7HA,CAxDA;;EAuLAG;IACA;;IACA;MACA;MACA;MACA;IACA;;IACA;EACA;;AA/LA","names":["name","data","callback","sliderType","validateCodeSending","loginForm","account","password","loginFormRule","required","message","trigger","registerForm","checkPass","vCode","registerFormRule","validator","methods","switchPage","getCookie","setCookie","expires","path","document","loginCheck","showClose","type","then","response","status","uname","setTimeout","checkEmail","registerCheck","mounted"],"sourceRoot":"src/components","sources":["AccountPage.vue"],"sourcesContent":["<template>\n  <div id=\"mainContainer\">\n    <div id=\"mainContainerInner\">\n      <div id=\"switchBtnContainer\">\n\t\t\t\t<button class=\"switchBtn\" @click=\"switchPage(1);\" title=\"登录您的账号\" id=\"user_loginBtn\">登&emsp;&emsp;录</button>\n\t\t\t\t<button class=\"switchBtn\" @click=\"switchPage(2);\" title=\"注册新的账号\" id=\"user_registerBtn\">注&emsp;&emsp;册</button>\n\t\t\t</div>\n      <div style=\"width: 94%;margin-left: 3%;margin-top: 6px;height: 3px;border-radius: 5%;background-color: #AAAAFF;\"></div>\n      <div id=\"mainContainer_switch\">\n        <div :class=\"sliderType\">\n          <!--账号登录-->\n          <div id=\"user_subPage_login\">\n            <el-form class=\"loginForm\" :rules=\"loginFormRule\" ref=\"loginForm\" :model=\"loginForm\" label-width=\"50px\">\n              <el-form-item label=\"账户\" prop=\"account\">\n                <el-input v-model=\"loginForm.account\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"password\">\n                <el-input type=\"password\" v-model=\"loginForm.password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <div style=\"width: 100%;display: flex;flex-direction: row;align-items: center;justify-content: center\">\n                  <div style=\"width: 50%;height: 100%\">\n                    <input ref=\"rememAC\" type=\"checkbox\" id=\"rememAC\" name=\"rememAC\"/>\n                    <label for=\"rememAC\" style=\"cursor: pointer;margin-right:9rem;color: blue;font-size: 16px;line-height: 30px;\">记住我</label>\n                  </div>\n                  <div style=\"width: 45%;height: 100%;display: flex;justify-content: end;align-items: center;margin-right: 5%;\">\n                    <a class=\"fontLink\" style=\"margin-left: 10%\" @click=\"switchPage(2)\">没有账号？立即注册</a>\n                  </div>\n                </div>\n              </el-form-item>\n              <input type=\"button\" id=\"loginBtn\" @click=\"loginCheck()\" value=\"登      录\"/>\n            </el-form>\n          </div>\n\n          <!--账号注册-->\n          <div id=\"user_subPage_register\">\n            <el-form class=\"registerForm\" :rules=\"registerFormRule\" ref=\"registerForm\" :model=\"registerForm\" label-width=\"18%\">\n              <el-form-item label=\"账户\" prop=\"account\">\n                <el-input v-model=\"registerForm.account\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"pass\">\n                <el-input type=\"password\" v-model=\"registerForm.password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认密码\" prop=\"checkPass\">\n                <el-input type=\"password\" v-model=\"registerForm.checkPass\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"验证码\" prop=\"vCode\">\n                <el-input style=\"width: 75%\" v-model=\"registerForm.vCode\" autocomplete=\"off\"></el-input>\n                <el-button style=\"margin-left: 5%;width: 20%;\" type=\"primary\" :loading=\"validateCodeSending\">发送</el-button>\n              </el-form-item>\n              <input type=\"button\" id=\"registerBtn\" @click=\"registerCheck()\" value=\"注      册\"/>\n            </el-form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- slogan -->\n    <div id=\"slogan\">\n        <p>-&emsp;登录NBI-Online解锁完整功能&emsp;-</p>\n    </div>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: \"P_AccountPage\",\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.registerForm.checkPass !== '') {\n          this.$refs.registerForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      sliderType: \"mainContainer_switch_slider_left\",\n      validateCodeSending: false,\n      loginForm: {\n        account: \"\",\n        password: \"\",\n      },\n      loginFormRule: {\n        account: [\n          { required: true, message: '请输入账户信息(邮箱地址)', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      registerForm:{\n        account: \"\",\n        password:\"\",\n        checkPass: \"\",\n        vCode: \"\",\n      },\n      registerFormRule: {\n        account: [\n          { required: true, message: '请输入账户信息(邮箱地址)', trigger: 'change' }\n        ],\n        password: [\n          { required: true,  validator: validatePass, trigger: 'blur' }\n        ],\n        checkPass: [\n          { required: true,  validator: validatePass2, trigger: 'blur' }\n        ],\n      },\n    }\n  },\n  methods:{\n    switchPage(w){\n      if (w===1){\n        this.sliderType = \"mainContainer_switch_slider_left\";\n      }\n      else if(w===2){\n        this.sliderType = \"mainContainer_switch_slider_right\";\n      }\n    },\n    getCookie(objname){//获取指定名称的cookie的值\n      const arrstr = document.cookie.split(\"; \");\n      for(var i = 0;i < arrstr.length;i ++){\n          var temp = arrstr[i].split(\"=\");\n          if(temp[0] === objname) return temp[1];\n      }\n      return null;\n    },\n    setCookie(name, value, hours, path) {\n      const expires = new Date();\n      expires.setTime(expires.getTime() + hours * 3600000);\n      path = path === \"\" ? \"\" : \";path=\" + path;\n      const _expires = (typeof hours) == \"string\" ? \"\" : \";expires=\" + expires.toUTCString();\n      document.cookie = name + \"=\" + value + _expires + path;\n    },\n    loginCheck(){\n      if (this.loginForm.account === \"\" || this.loginForm.password===\"\"){\n        this.$message({\n          showClose: true,\n          message: '请首先输入账号和密码',\n          type: 'error'\n        });\n        return;\n      }\n      this.$axios.post('/NBI/User/checkLogin/', {\n        \"uid\": this.loginForm.account,\n        \"pwd\": this.loginForm.password,\n        \"token\": this.getCookie(\"NBI_token\"),\n      }).then((response) => {\n        if (response.data === 1){\n          this.$message({\n            showClose: true,\n            message: '该邮箱未注册！',\n            type: 'error'\n          });\n        }\n        else if (response.data === 2){\n          this.$message({\n            showClose: true,\n            message: '密码错误！',\n            type: 'error'\n          });\n        }\n        else{\n          // 登录成功\n          this.setCookie(\"NBI_token\",response.data.token, 2, \"/NBI\");\n          this.setCookie(\"NBI_UID\", response.data.uid, 72, \"/NBI\");\n          this.$bus.$emit('changeStatus', {status: true, uname: response.data.uname});\n          if (this.$refs.rememAC.checked){\n            //记录pwd\n            this.setCookie(\"NBI_pwd\", this.loginForm.password, 72, \"/NBI\");\n          }\n          this.$message({\n            showClose: true,\n            message: '登录成功！页面将会自动跳转',\n            type: 'success'\n          });\n          setTimeout(()=>{\n            this.$router.push({path: \"/ImageProcess\"});\n          }, 2000);\n        }\n      });\n    },\n    checkEmail(email){\n      const myReg=/^[a-zA-Z0-9_-]+@([a-zA-Z0-9]+\\.)+(com|cn|net|org)$/;\n      return myReg.test(email);\n    },\n    registerCheck(){\n      if (this.registerForm.checkPass !== this.registerForm.password){\n        this.$message({\n          showClose: true,\n          message: '两次密码输入不一致',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.registerForm.account === null || this.registerForm.password === null){\n        this.$message({\n          showClose: true,\n          message: '注册关键信息不能为空',\n          type: 'error'\n        });\n        return;\n      }\n      if (!this.checkEmail(this.registerForm.account)){\n        this.$message({\n          showClose: true,\n          message: '请输入符合规范的电子邮箱',\n          type: 'error'\n        });\n        return;\n      }\n      this.$axios.post('/NBI/User/register/', {\n        \"email\": this.registerForm.account,\n        \"pw\": this.registerForm.password,\n      }).then((response) => {\n        if (response.data === 0){\n          this.$message({\n            showClose: true,\n            message: '注册失败，该邮箱地址已被注册！',\n            type: 'error'\n          });\n          this.registerForm.account = \"\";\n          this.registerForm.password = \"\";\n        }\n        else if (response.data === 1){\n          this.$message({\n            showClose: true,\n            message: '注册成功！请登录。',\n            type: 'success'\n          });\n          setTimeout(()=>{\n            this.switchPage(1);\n          }, 3000);\n        }\n      });\n    },\n  },\n  mounted(){\n    const pwd = this.getCookie(\"NBI_pwd\");\n    if (pwd != null){\n      this.loginForm.password = pwd;\n      this.loginForm.account = this.getCookie(\"NBI_UID\");\n      this.$refs.rememAC.checked = true;\n    }\n    this.switchPage(this.$route.query.w);\n  },\n}\n</script>\n\n<style scoped>\n#mainContainer{\n    width: 34%;\n    height: 80%;\n    padding-top: 80px;\n    overflow: hidden;\n    /* display: flex; */\n    align-items: center;\n    /* justify-content: center; */\n}\n\n#mainContainerInner{\n    width: 100%;\n    /* 48 - 58 */\n    /* height: 48%; */\n    background-color: rgba(18, 124, 238, 0.19);\n    transition: 0.2s ease;\n    overflow: hidden;\n}\n\n#switchBtnContainer{\n\twidth: 100%;\n\tpadding-top: 20px;\n\tdisplay: flex;\n\tjustify-content: center;\n}\n.switchBtn{\n\twidth: 46%;\n\theight: 40px;\n\tmargin: 5px;\n\tborder: royalblue solid 1px;\n\tbackground: #F8F8FF;\n\tcursor: pointer;\n\ttransition: all 0.2s ease;\n}\n.switchBtn:hover{\n\tbackground: #AAAAFF;\n}\n\n#mainContainer_switch{\n    overflow: hidden;\n}\n\n.mainContainer_switch_slider_left{\n    margin-top: 3%;\n    margin-left: 0;\n    width: 200%;\n    height: 285px;\n    display: flex;\n    flex-direction: row;\n    transition: all 0.2s ease;\n}\n\n.mainContainer_switch_slider_right{\n    margin-top: 3%;\n    margin-left: -100%;\n    width: 200%;\n    height: 350px;\n    display: flex;\n    flex-direction: row;\n    transition: all 0.2s ease;\n}\n\n#user_subPage_login{\n  width: 100%;\n  /*height: 100%;*/\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  transition: all 0.2s ease;\n}\n\n#user_subPage_register{\n  width: 100%;\n  /*height: 100%;*/\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  transition: all 0.2s ease;\n}\n\n.loginForm{\n\twidth: 90%;\n\twhite-space: nowrap;\n}\n\n.registerForm{\n  width: 90%;\n\twhite-space: nowrap;\n}\n\ninput[type=\"checkbox\"] {\n    height: 18px;\n    width: 18px;\n    margin-top: 18px;\n    margin-left: 10px;\n}\n\n#rememAC{\n\tmargin-left: -30px;\n  cursor: pointer;\n}\n#loginBtn{\n\twidth: 100%;\n\theight: 45px;\n\tborder: #1122AA solid 1px;\n\tbackground: transparent;\n\tcursor: pointer;\n\ttransition: all 0.2s ease;\n}\n#loginBtn:hover{\n    background-color: rgba(61, 255, 61, 0.378);\n}\ninput[type=\"checkbox\"] {\n    height: 18px;\n    width: 18px;\n    margin-top: 18px;\n    margin-left: 10px;\n}\n\n.fontLink{\n\tcolor: #1122AA;\n\tfont-size: 16px;\n}\n.fontLink:hover{\n\tcolor: rgb(52, 86, 255);\n\tcursor: pointer;\n}\n\n#registerBtn{\n\twidth: 100%;\n\theight: 45px;\n    margin-top: 2px;\n\tborder: #1122AA solid 1px;\n\tbackground: transparent;\n\tcursor: pointer;\n\ttransition: all 0.2s ease;\n}\n#registerBtn:hover{\n\tcolor: white;\n    background-color: #2244CC;\n}\n#slogan{\n\twidth: 100%;\n\tmargin-top: 20px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tcolor: grey;\n}\n</style>"]},"metadata":{},"sourceType":"module"}