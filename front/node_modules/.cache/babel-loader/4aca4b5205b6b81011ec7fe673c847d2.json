{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nexport default {\n  name: \"ZnScreenBtn\",\n  components: {},\n  props: {\n    options: {\n      type: Object,\n      // 字段管理数据\n      default: () => {}\n    },\n    views_id: {\n      type: String,\n      // 视图ID\n      default: () => \"\"\n    },\n    mark: {\n      type: String,\n      // mark特定标识\n      default: () => \"\"\n    }\n  },\n\n  data() {\n    return {\n      checkList: [\"选中且禁用\", \"复选框 A\"],\n      judgeList: [],\n      conditionList1: [{\n        value: \"when\",\n        label: \"当\"\n      }],\n      conditionList2: [{\n        value: \"and\",\n        label: \"并且\"\n      }, {\n        value: \"or\",\n        label: \"或者\"\n      }],\n      form: {\n        mark: this.mark,\n        //页面标识\n        views_id: \"\",\n        //视图ID\n        filters: []\n      },\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        }\n\n      }\n    };\n  },\n\n  computed: {},\n  watch: {},\n\n  // created() {\n  //   this.getFilterRules();\n  // },\n  mounted() {},\n\n  methods: {\n    // 获取全局定义筛选规则\n    // getFilterRules() {\n    //   filterRules().then((res) => {\n    //     this.judgeList = res.data;\n    // 数据示例\n    // res.data = {\n    //   text: [\n    //     { label: \"等于\", value: \"=\" },\n    //     { label: \"不等于\", value: \"<>\" },\n    //     { label: \"包含\", value: \"like\" },\n    //     { label: \"不包含\", value: \"notLike\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   radio: [\n    //     { label: \"等于\", value: \"=\" },\n    //     { label: \"不等于\", value: \"<>\" },\n    //     { label: \"包含\", value: \"like\" },\n    //     { label: \"不包含\", value: \"notLike\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   select: [\n    //     { label: \"等于\", value: \"=\" },\n    //     { label: \"不等于\", value: \"<>\" },\n    //     { label: \"包含\", value: \"like\" },\n    //     { label: \"不包含\", value: \"notLike\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   date: [\n    //     { label: \"等于\", value: \"=\" },\n    //     { label: \"不等于\", value: \"<>\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   personnel: [\n    //     { label: \"等于\", value: \"=\" },\n    //     { label: \"不等于\", value: \"<>\" },\n    //     { label: \"包含\", value: \"like\" },\n    //     { label: \"不包含\", value: \"notLike\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   attachment: [\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    //   number: [\n    //     { label: \"=\", value: \"=\" },\n    //     { label: \"≠\", value: \"<>\" },\n    //     { label: \">\", value: \">\" },\n    //     { label: \"≥\", value: \">=\" },\n    //     { label: \"<\", value: \"<\" },\n    //     { label: \"≤\", value: \"<=\" },\n    //     { label: \"包含\", value: \"like\" },\n    //     { label: \"不包含\", value: \"notLike\" },\n    //     { label: \"为空\", value: \"null\" },\n    //     { label: \"不为空\", value: \"notNull\" },\n    //   ],\n    // };\n    //   });\n    // },\n    // 添加一行筛选条件\n    addCurrentRow() {// this.form.filters.push({\n      //   where: \"\", //when:当，and:并且，or:或者\n      //   exp: this.judgeList[this.getDefaultType()][0].value, //表达式 筛选规则对应当value\n      //   field: this.options.fields[0].name, //字段名 表头对应当name\n      //   type: this.getDefaultType(),\n      //   options: {\n      //     valueStr: \"\", //值为字符串\n      //     valueArray: \"\", //值为数组\n      //     valueType: \"\", //对应value的类型 例：日期的今日、昨日等\n      //   },\n      // });\n      // if (this.form.filters.length == 1) {\n      //   this.form.filters[0].where = this.conditionList1[0].value;\n      // } else if (this.form.filters.length == 2) {\n      //   this.form.filters[1].where = this.conditionList2[0].value;\n      // } else {\n      //   this.form.filters[2].where = this.form.filters[1].where;\n      // }\n      // this.submitFilters();\n    },\n\n    // 删除当前行筛选条件\n    delCurrentRow(index) {\n      this.form.filters.splice(index, 1);\n\n      if (this.form.filters.length > 0) {\n        this.form.filters[0].where = this.conditionList1[0].value;\n      }\n\n      if (this.form.filters.length > 1) {\n        this.form.filters[1].where = this.conditionList2[0].value;\n      }\n\n      this.submitFilters();\n    },\n\n    getJudgeList(index) {\n      return this.judgeList[this.form.filters[index].type];\n    },\n\n    getDefaultType() {\n      let obj = this.options.fields.find(item => {\n        return item.name == this.options.fields[0].name;\n      });\n      return obj.type;\n    },\n\n    // 联动数据返回\n    getData(index) {\n      let obj = {};\n\n      if (this.form.filters[index].field && this.options.fields) {\n        //父传子 第一次是options=[]\n        obj = this.options.fields.find(item => {\n          return item.name == this.form.filters[index].field;\n        });\n      } else {\n        obj.type = \"text\";\n      }\n\n      return obj;\n    },\n\n    // 操作第二列-字段\n    handleField(index) {\n      this.form.filters[index].options.valueStr = \"\";\n      this.form.filters[index].options.valueType = \"\";\n      this.form.filters[index].options.valueArray = \"\";\n      this.form.filters[index].type = this.getData(index).type;\n      this.form.filters[index].exp = this.getJudgeList(index)[0].value; // 设置默认值\n\n      if ([\"date\", \"select\", \"checkBox\", \"radio\"].includes(this.form.filters[index].type)) {\n        // 目前只针对日期类型的(以后再有扩展的,用includes去匹配)\n        if ([\"date\"].includes(this.form.filters[index].type)) {\n          this.form.filters[index].options.valueType = this.getData(index).param[0].value;\n        } else {\n          this.form.filters[index].options.valueType = \"\";\n        }\n      }\n\n      this.submitFilters();\n    },\n\n    // 操作第三列-条件\n    handlerValueType(index) {\n      this.form.filters[index].options.valueStr = \"\";\n      this.form.filters[index].options.valueType = \"\";\n      this.form.filters[index].options.valueArray = \"\";\n\n      if ([\"date\"].includes(this.form.filters[index].type) && ![\"Null\", \"NotNull\"].includes(this.form.filters[index].exp)) {\n        this.form.filters[index].options.valueType = this.getData(index).param[0].value;\n      }\n\n      this.submitFilters();\n    } // 保存筛选条件\n    // submitFilters() {\n    //   this.form.views_id = this.views_id;\n    //   saveFilters(this.form).then((res) => {\n    //     if (res.code == 200) {\n    //       this.$emit(\"upTable\"); //更新父级列表数据\n    //     }\n    //   });\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":";AA+PA;EACAA,mBADA;EAEAC,cAFA;EAGAC;IACAC;MACAC,YADA;MACA;MACAC;IAFA,CADA;IAKAC;MACAF,YADA;MACA;MACAC;IAFA,CALA;IASAE;MACAH,YADA;MACA;MACAC;IAFA;EATA,CAHA;;EAiBAG;IACA;MACAC,6BADA;MAEAC,aAFA;MAGAC;QAAAC;QAAAC;MAAA,EAHA;MAIAC,iBACA;QAAAF;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,CAJA;MAQAE;QACAR,eADA;QACA;QACAD,YAFA;QAEA;QACAU;MAHA,CARA;MAaAC;QACAC;UACA;QACA;;MAHA;IAbA;EAmBA,CArCA;;EAsCAC,YAtCA;EAuCAC,SAvCA;;EAwCA;EACA;EACA;EACAC,YA3CA;;EA4CAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,iBACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CArFA;;IAsFA;IACAC;MACA;;MACA;QACA;MACA;;MACA;QACA;MACA;;MACA;IACA,CAhGA;;IAiGAC;MACA;IACA,CAnGA;;IAoGAC;MACA;QACA;MACA,CAFA;MAGA;IACA,CAzGA;;IA0GA;IACAC;MACA;;MACA;QACA;QACAC;UACA;QACA,CAFA;MAGA,CALA,MAKA;QACAA;MACA;;MACA;IACA,CAtHA;;IAuHA;IACAC;MACA;MACA;MACA;MACA;MACA,iEALA,CAMA;;MACA,IACA,iDACA,6BADA,CADA,EAIA;QACA;QACA;UACA,6CACA,kCADA;QAEA,CAHA,MAGA;UACA;QACA;MACA;;MACA;IACA,CA7IA;;IA8IA;IACAC;MACA;MACA;MACA;;MACA,IACA,oDACA,2DAFA,EAGA;QACA,6CACA,kCADA;MAEA;;MACA;IACA,CA3JA,CA4JA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EApKA;AA5CA","names":["name","components","props","options","type","default","views_id","mark","data","checkList","judgeList","conditionList1","value","label","conditionList2","form","filters","pickerOptions","disabledDate","computed","watch","mounted","methods","addCurrentRow","delCurrentRow","getJudgeList","getDefaultType","getData","obj","handleField","handlerValueType"],"sourceRoot":"src/components/history","sources":["QueryFilter.vue"],"sourcesContent":["<template>\r\n  <el-popover\r\n    placement=\"bottom\"\r\n    trigger=\"click\"\r\n    width=\"641\"\r\n    popper-class=\"screen-management-btn-popover\"\r\n    :visible-arrow=\"false\"\r\n  >\r\n    <div class=\"screen-management-header mb-10\">设置筛选条件</div>\r\n    <el-divider></el-divider>\r\n    <section class=\"screen-management-main\">\r\n      <el-row :gutter=\"8\" v-for=\"(item, index) in form.filters\" :key=\"index\">\r\n        <el-col\r\n          :span=\"4\"\r\n          v-if=\"index == 0\"\r\n          :class=\"index != 1 ? 'no-select-icon' : ''\"\r\n        >\r\n          <el-select v-model=\"form.filters[index].where\" :disabled=\"index != 1\">\r\n            <el-option\r\n              v-for=\"item in conditionList1\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"4\" v-else :class=\"index != 1 ? 'no-select-icon' : ''\">\r\n          <el-select\r\n            v-model=\"form.filters[1].where\"\r\n            :disabled=\"index != 1\"\r\n            @change=\"submitFilters\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in conditionList2\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"5\">\r\n          <el-select\r\n            v-model=\"form.filters[index].field\"\r\n            placeholder=\"请选择\"\r\n            @change=\"handleField(index)\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in options.fields\"\r\n              :key=\"item.name\"\r\n              :label=\"item.label\"\r\n              :value=\"item.name\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-select\r\n            v-model=\"form.filters[index].exp\"\r\n            placeholder=\"请选择\"\r\n            @change=\"handlerValueType(index)\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in getJudgeList(index)\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <!--*  文本：text\r\n            *  单选：radio\r\n            *  多选：select\r\n            *  日期：date\r\n            *  人员：personnel\r\n            *  附件：attachment\r\n            *  数字：number\r\n            *  复选框：checkBox\r\n             -->\r\n        <el-col\r\n          :span=\"10\"\r\n          v-if=\"['null', 'notNull'].includes(form.filters[index].exp)\"\r\n        >\r\n          <el-col :span=\"24\"></el-col>\r\n        </el-col>\r\n        <el-col\r\n          :span=\"10\"\r\n          v-else\r\n          :class=\"\r\n            form.filters[index].type == 'checkBox' ? '' : 'col-special-style'\r\n          \"\r\n        >\r\n          <!-- 文本：text -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'text'\">\r\n            <el-input\r\n              v-model=\"form.filters[index].options.valueStr\"\r\n              placeholder=\"请输入\"\r\n              @input=\"submitFilters\"\r\n            />\r\n          </el-col>\r\n          <!-- 单选：radio -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'radio'\">\r\n            <el-radio-group\r\n              v-model=\"form.filters[index].options.valueStr\"\r\n              @change=\"submitFilters\"\r\n              class=\"col-radio\"\r\n            >\r\n              <el-radio\r\n                v-for=\"(item, index) in getData(index).param\"\r\n                :key=\"index\"\r\n                :label=\"item.value\"\r\n                :value=\"item.value\"\r\n              >\r\n                {{ item.label }}\r\n              </el-radio>\r\n            </el-radio-group>\r\n          </el-col>\r\n          <!-- 多选：select -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'select'\">\r\n            <el-select\r\n              v-model=\"form.filters[index].options.valueArray\"\r\n              multiple\r\n              collapse-tags\r\n              placeholder=\"请选择\"\r\n              @change=\"submitFilters\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in getData(index).param\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <!-- 日期：date -->\r\n          <el-col\r\n            :span=\"24\"\r\n            v-if=\"form.filters[index].type == 'date'\"\r\n            class=\"col-special-style\"\r\n          >\r\n            <el-col :span=\"11\">\r\n              <el-select\r\n                v-model=\"form.filters[index].options.valueType\"\r\n                @change=\"submitFilters\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in getData(index).param\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-col>\r\n            <el-col\r\n              :span=\"13\"\r\n              v-if=\"form.filters[index].options.valueType == '-1'\"\r\n            >\r\n              <el-date-picker\r\n                v-model=\"form.filters[index].options.valueStr\"\r\n                type=\"date\"\r\n                prefix-icon=\"\"\r\n                placeholder=\"选择日期\"\r\n                value-format=\"yyyy-MM-dd\"\r\n                :picker-options=\"pickerOptions\"\r\n                @change=\"submitFilters\"\r\n              ></el-date-picker>\r\n            </el-col>\r\n            <el-col :span=\"13\" v-else></el-col>\r\n          </el-col>\r\n          <!-- 人员：personnel -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'personnel'\">\r\n            <el-select\r\n              v-model=\"form.filters[index].options.valueStr\"\r\n              @change=\"submitFilters\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in getData(index).param\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <!-- 附件：attachment -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'attachment'\">\r\n            <el-input\r\n              v-model=\"form.filters[index].options.valueStr\"\r\n              placeholder=\"请输入\"\r\n              @input=\"submitFilters\"\r\n            />\r\n          </el-col>\r\n          <!-- 数字：number -->\r\n          <el-col :span=\"24\" v-if=\"form.filters[index].type == 'number'\">\r\n            <el-input\r\n              v-model=\"form.filters[index].options.valueStr\"\r\n              placeholder=\"请输入\"\r\n              @input=\"submitFilters\"\r\n            />\r\n          </el-col>\r\n          <!-- 复选框：checkBox -->\r\n          <el-col\r\n            :span=\"24\"\r\n            v-if=\"form.filters[index].type == 'checkBox'\"\r\n            class=\"col-checkbox\"\r\n          >\r\n            <!-- <el-checkbox-group v-model=\"form.filters[index].options.valueArray\">\r\n              <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n              <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n              <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n              <el-checkbox label=\"禁用\" disabled></el-checkbox>\r\n              <el-checkbox label=\"选中且禁用\" disabled></el-checkbox>\r\n            </el-checkbox-group> -->\r\n            <!-- <el-select\r\n              v-model=\"form.filters[index].options.valueArray\"\r\n              multiple\r\n              collapse-tags\r\n              placeholder=\"请选择\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in getData(index).param\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              ></el-option>\r\n            </el-select> -->\r\n          </el-col>\r\n        </el-col>\r\n\r\n        <el-col :span=\"1\" class=\"icon-close font-color\">\r\n          <!-- <icon :iconName=\"'icon-close'\" @click=\"delCurrentRow(index)\" /> -->\r\n        </el-col>\r\n      </el-row>\r\n    </section>\r\n    <el-col :span=\"24\" class=\"add\">\r\n      <el-button\r\n        class=\"screen-button font-color\"\r\n        type=\"text\"\r\n        size=\"medium\"\r\n        @click=\"addCurrentRow\"\r\n      >\r\n        <!-- <icon :iconName=\"'icon-add'\" /> -->\r\n        添加条件\r\n      </el-button>\r\n    </el-col>\r\n    <el-button\r\n      class=\"screen-button font-normal\"\r\n      type=\"text\"\r\n      size=\"medium\"\r\n      slot=\"reference\"\r\n    >\r\n      <!-- <icon :iconName=\"'icon-filter'\" /> -->\r\n      <span>筛选</span>\r\n    </el-button>\r\n  </el-popover>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ZnScreenBtn\",\r\n  components: {},\r\n  props: {\r\n    options: {\r\n      type: Object, // 字段管理数据\r\n      default: () => {},\r\n    },\r\n    views_id: {\r\n      type: String, // 视图ID\r\n      default: () => \"\",\r\n    },\r\n    mark: {\r\n      type: String, // mark特定标识\r\n      default: () => \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      checkList: [\"选中且禁用\", \"复选框 A\"],\r\n      judgeList: [],\r\n      conditionList1: [{ value: \"when\", label: \"当\" }],\r\n      conditionList2: [\r\n        { value: \"and\", label: \"并且\" },\r\n        { value: \"or\", label: \"或者\" },\r\n      ],\r\n      form: {\r\n        mark: this.mark, //页面标识\r\n        views_id: \"\", //视图ID\r\n        filters: [],\r\n      },\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() > Date.now();\r\n        },\r\n      },\r\n    };\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  // created() {\r\n  //   this.getFilterRules();\r\n  // },\r\n  mounted() {},\r\n  methods: {\r\n    // 获取全局定义筛选规则\r\n    // getFilterRules() {\r\n    //   filterRules().then((res) => {\r\n    //     this.judgeList = res.data;\r\n        // 数据示例\r\n        // res.data = {\r\n        //   text: [\r\n        //     { label: \"等于\", value: \"=\" },\r\n        //     { label: \"不等于\", value: \"<>\" },\r\n        //     { label: \"包含\", value: \"like\" },\r\n        //     { label: \"不包含\", value: \"notLike\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   radio: [\r\n        //     { label: \"等于\", value: \"=\" },\r\n        //     { label: \"不等于\", value: \"<>\" },\r\n        //     { label: \"包含\", value: \"like\" },\r\n        //     { label: \"不包含\", value: \"notLike\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   select: [\r\n        //     { label: \"等于\", value: \"=\" },\r\n        //     { label: \"不等于\", value: \"<>\" },\r\n        //     { label: \"包含\", value: \"like\" },\r\n        //     { label: \"不包含\", value: \"notLike\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   date: [\r\n        //     { label: \"等于\", value: \"=\" },\r\n        //     { label: \"不等于\", value: \"<>\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   personnel: [\r\n        //     { label: \"等于\", value: \"=\" },\r\n        //     { label: \"不等于\", value: \"<>\" },\r\n        //     { label: \"包含\", value: \"like\" },\r\n        //     { label: \"不包含\", value: \"notLike\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   attachment: [\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        //   number: [\r\n        //     { label: \"=\", value: \"=\" },\r\n        //     { label: \"≠\", value: \"<>\" },\r\n        //     { label: \">\", value: \">\" },\r\n        //     { label: \"≥\", value: \">=\" },\r\n        //     { label: \"<\", value: \"<\" },\r\n        //     { label: \"≤\", value: \"<=\" },\r\n        //     { label: \"包含\", value: \"like\" },\r\n        //     { label: \"不包含\", value: \"notLike\" },\r\n        //     { label: \"为空\", value: \"null\" },\r\n        //     { label: \"不为空\", value: \"notNull\" },\r\n        //   ],\r\n        // };\r\n    //   });\r\n    // },\r\n    // 添加一行筛选条件\r\n    addCurrentRow() {\r\n      // this.form.filters.push({\r\n      //   where: \"\", //when:当，and:并且，or:或者\r\n      //   exp: this.judgeList[this.getDefaultType()][0].value, //表达式 筛选规则对应当value\r\n      //   field: this.options.fields[0].name, //字段名 表头对应当name\r\n      //   type: this.getDefaultType(),\r\n      //   options: {\r\n      //     valueStr: \"\", //值为字符串\r\n      //     valueArray: \"\", //值为数组\r\n      //     valueType: \"\", //对应value的类型 例：日期的今日、昨日等\r\n      //   },\r\n      // });\r\n      // if (this.form.filters.length == 1) {\r\n      //   this.form.filters[0].where = this.conditionList1[0].value;\r\n      // } else if (this.form.filters.length == 2) {\r\n      //   this.form.filters[1].where = this.conditionList2[0].value;\r\n      // } else {\r\n      //   this.form.filters[2].where = this.form.filters[1].where;\r\n      // }\r\n      // this.submitFilters();\r\n    },\r\n    // 删除当前行筛选条件\r\n    delCurrentRow(index) {\r\n      this.form.filters.splice(index, 1);\r\n      if (this.form.filters.length > 0) {\r\n        this.form.filters[0].where = this.conditionList1[0].value;\r\n      }\r\n      if (this.form.filters.length > 1) {\r\n        this.form.filters[1].where = this.conditionList2[0].value;\r\n      }\r\n      this.submitFilters();\r\n    },\r\n    getJudgeList(index) {\r\n      return this.judgeList[this.form.filters[index].type];\r\n    },\r\n    getDefaultType() {\r\n      let obj = this.options.fields.find((item) => {\r\n        return item.name == this.options.fields[0].name;\r\n      });\r\n      return obj.type;\r\n    },\r\n    // 联动数据返回\r\n    getData(index) {\r\n      let obj = {};\r\n      if (this.form.filters[index].field && this.options.fields) {\r\n        //父传子 第一次是options=[]\r\n        obj = this.options.fields.find((item) => {\r\n          return item.name == this.form.filters[index].field;\r\n        });\r\n      } else {\r\n        obj.type = \"text\";\r\n      }\r\n      return obj;\r\n    },\r\n    // 操作第二列-字段\r\n    handleField(index) {\r\n      this.form.filters[index].options.valueStr = \"\";\r\n      this.form.filters[index].options.valueType = \"\";\r\n      this.form.filters[index].options.valueArray = \"\";\r\n      this.form.filters[index].type = this.getData(index).type;\r\n      this.form.filters[index].exp = this.getJudgeList(index)[0].value;\r\n      // 设置默认值\r\n      if (\r\n        [\"date\", \"select\", \"checkBox\", \"radio\"].includes(\r\n          this.form.filters[index].type\r\n        )\r\n      ) {\r\n        // 目前只针对日期类型的(以后再有扩展的,用includes去匹配)\r\n        if ([\"date\"].includes(this.form.filters[index].type)) {\r\n          this.form.filters[index].options.valueType =\r\n            this.getData(index).param[0].value;\r\n        } else {\r\n          this.form.filters[index].options.valueType = \"\";\r\n        }\r\n      }\r\n      this.submitFilters();\r\n    },\r\n    // 操作第三列-条件\r\n    handlerValueType(index) {\r\n      this.form.filters[index].options.valueStr = \"\";\r\n      this.form.filters[index].options.valueType = \"\";\r\n      this.form.filters[index].options.valueArray = \"\";\r\n      if (\r\n        [\"date\"].includes(this.form.filters[index].type) &&\r\n        ![\"Null\", \"NotNull\"].includes(this.form.filters[index].exp)\r\n      ) {\r\n        this.form.filters[index].options.valueType =\r\n          this.getData(index).param[0].value;\r\n      }\r\n      this.submitFilters();\r\n    },\r\n    // 保存筛选条件\r\n    // submitFilters() {\r\n    //   this.form.views_id = this.views_id;\r\n    //   saveFilters(this.form).then((res) => {\r\n    //     if (res.code == 200) {\r\n    //       this.$emit(\"upTable\"); //更新父级列表数据\r\n    //     }\r\n    //   });\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.screen-management-main {\r\n  max-height: 336px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.screen-management-main .col-special-style {\r\n  padding: 0 !important;\r\n  border: none;\r\n}\r\n\r\n.screen-management-main .col-radio .el-radio {\r\n  margin-right: 10px;\r\n}\r\n\r\n.screen-management-main .col-checkbox {\r\n  white-space: nowrap;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n}\r\n\r\n.screen-management-main .col-radio {\r\n  white-space: nowrap;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n}\r\n\r\n.icon-close {\r\n  max-height: 40px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.el-row {\r\n  margin: 0 0 8px 0 !important;\r\n}\r\n.screen-management-header {\r\n  font-weight: 600;\r\n}\r\n\r\n.el-divider--horizontal {\r\n  margin: 16px 0 16px 0 !important;\r\n}\r\n\r\n.add {\r\n  margin-top: 13px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}